name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  test:
    name: Run end-to-end tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          # name: playwright-report
          # path: playwright-report/
          name: allure-report
          path: allure-report/
          retention-days: 30
      #!new code
      - name: Configure Git
        run: |
          git config user.name "Radomyr Horban"
          git config user.email "horban.radomyr@gmail.com"

      # - name: Copy Allure report
      #   run: |
      #     mkdir -p allure-results
      #     cp -r allure-report/* allure-results/

      - name: Create Allure report
        run: allure generate allure-results -o allure-report --clean

      - name: Create and push `allure-report` branch
        run: |
          git checkout -b allure-report
          git add allure-results
          git commit -m "Add Allure report"
          git push origin allure-report

      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: demoAllureReport
          path: allure-report

      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: allure-report
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      # - name: Publish Allure report to GitHub Pages
      #   run: |
      #     git checkout allure-report
      #     mkdir -p .github/pages
      #     mv allure-results .github/pages
      #     git add .github/pages
      #     git commit -m "Publish Allure report to GitHub Pages"
      #     git push origin allure-report

      # - name: Add link to branch description
      #   run: |
      #     allureReportURL=$(curl -s https://api.github.com/repos/$GITHUB_REPOSITORY/pages | jq -r '.html_url')
      #     allureReportLink="[Allure Report]($allureReportURL)"
      #     echo "Allure Report: $allureReportLink" >> branch-description.txt
      #     git checkout allure-report
      #     git config user.name "GitHub Actions"
      #     git config user.email "actions@github.com"
      #     git commit --allow-empty -F branch-description.txt
      #     git push origin allure-report
